{"meta":{"title":"SakuraTest","subtitle":null,"description":"论一只菜鸡如何毁掉一个好主题","author":"yuuki","url":""},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-02-18T16:54:09.331Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Yukina&nbsp; （ 雪(yuki)凪(na)） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-02-18T00:38:20.679Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"books","date":"2019-02-10T13:32:48.000Z","updated":"2020-02-18T00:38:20.680Z","comments":false,"path":"books/index.html","permalink":"/books/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-02-18T00:38:20.680Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-02-18T16:54:14.441Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"有啥就说 不要含糊。 不明白为啥改不了","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-02-18T00:38:20.682Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-02-18T00:38:20.683Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-02-18T00:38:20.684Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-02-18T00:38:20.685Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-02-18T00:38:20.685Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-02-18T00:38:20.686Z","comments":false,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":"","keywords":null},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-02-18T00:38:20.687Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"","date":"2020-02-18T00:38:20.672Z","updated":"2020-02-18T00:38:20.672Z","comments":true,"path":"404/404.html","permalink":"/404/404.html","excerpt":"","text":"404 html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; vertical-align: baseline; font: inherit; font-size: 100%; } tbody, tfoot, thead, tr, th, td { margin: 0; padding: 0; border: 0; font: inherit; font-size: 100%; } /* HTML5 display-role reset for older browsers */ article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; } body { line-height: 1; } ol, ul { list-style: none; } q:before, q:after { content: ''; content: none; } body { width: 100%; *zoom: 1; } body:before, body:after { display: table; content: \"\"; } body:after { clear: both; } html, body { height: 100%; } html { height: 100%; max-height: 100%; } body { color: #333333; font-size: 1em; font-family: \"ff-tisa-web-pro-1\", \"ff-tisa-web-pro-2\", \"Lucida Grande\", \"Hiragino Sans GB\", \"Hiragino Sans GB W3\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif; -webkit-font-smoothing: antialiased; } ::selection { background: rgba(255, 255, 255, 0.3); } ::-moz-selection { background: rgba(255, 255, 255, 0.3); } a { color: #DF9C81; text-decoration: none; } a:hover { color: #d06c44; -webkit-transition: .5s; -moz-transition: .5s; -o-transition: .5s; -ms-transition: .5s; } h1, h2, h3, h4, h5, h5 { margin-top: 1.0em; margin-bottom: .5em; color: #333333; font-weight: lighter; font-family: \"ff-tisa-web-pro-1\", \"ff-tisa-web-pro-2\", \"Lucida Grande\", \"Hiragino Sans GB\", \"Hiragino Sans GB W3\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif; -webkit-font-smoothing: antialiased; } h1 { margin-top: 0; letter-spacing: .05em; font-size: 1.8em; line-height: 1.2em; } h2 { font-size: 1.6em; } h3 { font-size: 1.4em; } h4 { font-size: 1.2em; } h4 { font-size: 1.1em; } h5 { font-size: 1em; } p { margin-bottom: 1.3em; line-height: 1.7em; } em { font-style: italic; } ol, ul { margin: 0 0 .3em 1em; } ol li, ul li { margin: 0 0 .2em 0; line-height: 1.6em; } ol ol, ol ul, ul ol, ul ul { margin: .1em 0 .2em 2em; } ol { list-style-type: decimal; } ul { list-style-type: disc; } .date, .time, .author, .tags { color: #c7c7c7; font-size: .8em; } .date a, .time a, .author a, .tags a { color: #666666; } .date a:hover, .time a:hover, .author a:hover, .tags a:hover { color: #d06c44; } .footer { position: absolute; bottom: 0; left: 0; width: 100%; color: #b3b3b3; font-size: .7em; } .logo { width: 25%; border: 3px solid #FFF; border-radius: 50%; box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.3); transition: all .5s; } .logo:hover { border: 3px solid #5ba4e5; transition: all .5s; -webkit-transform: rotate(360deg); /* Safari 和 Chrome */ -moz-transform: rotate(360deg); /* Firefox */ -o-transform: rotate(350deg); /* Opera */ transform: rotate(360deg); -ms-transform: rotate(360deg); /* IE 9 */ } .Weibo_icon_logo { width: 20px; height: 20px; border-radius: 50%; background-position: -50px -25px; box-shadow: 0 0 4px rgba(0, 0, 0, 0.3); vertical-align: -2px; } .Weibo_icon { display: inline-block; background-image: url(../homepage/img/V_icon.png); background-repeat: no-repeat; } .Weibo_icon_position { position: relative; top: -12px; right: 42px; } hr { border: none; } .hidden { display: none !important; } .panel { display: table; width: 100%; height: 100%; } .panel-title { margin: 0 0 15px 0; color: #FFF; letter-spacing: 4px; font-size: 5em; } .panel-subtitle { color: #CCCCCC; letter-spacing: 3px; font-weight: lighter; font-size: 1.2em; font-family: \"ff-tisa-web-pro-1\", \"ff-tisa-web-pro-2\", \"Lucida Grande\", \"Hiragino Sans GB\", \"Hiragino Sans GB W3\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif; -webkit-font-smoothing: antialiased; } .panel-cover { position: fixed; z-index: 900; display: block; width: 100%; height: 100%; max-width: none; background: url(../images/background-cover.jpg) top left no-repeat #666666; background-size: cover; } .panel-cover--collapsed { width: 30%; max-width: 700px; } .panel-cover--overlay { position: absolute; top: 0; right: 0; bottom: 0; left: 0; z-index: 0; display: block; background-color: rgba(68, 68, 68, 0.6); background-image: -webkit-linear-gradient(-410deg, rgba(68, 68, 68, 0.6) 20%, rgba(0, 0, 0, 0.9)); background-image: linear-gradient(140deg, rgba(68, 68, 68, 0.6) 20%, rgba(0, 0, 0, 0.9)); } .panel-cover__logo { margin: 0px 0px 0px 20px; margin-bottom: .2em; } .panel-cover__description { margin: 0 30px; font-size: 20px; font-weight: bolder; } .panel-cover__divider { margin: 20px auto; width: 50%; border-top: 1px solid rgba(255, 255, 255, 0.14); } .panel-cover__divider--secondary { width: 15%; } .panel-main { display: table; width: 100%; height: 100%; } .panel-main__inner { position: relative; z-index: 800; display: table-cell; padding: 0 60px; vertical-align: middle; } .panel-main__content { margin: 0 auto; max-width: 800px; } .panel-main__content--fixed { width: 480px; -webkit-transition: width 1s; /* Safari */ transition: width 1s; } .panel-inverted { color: #FFF; text-align: center; text-shadow: 0 1px 1px rgba(0, 0, 0, 0.4); font-weight: 100; } .panel-inverted a { color: #FFF; } .cover-navigation { margin-top: 42px; } .cover-navigation--social { margin-left: 30px; } .cover-blue { background-color: rgba(37, 104, 163, 0.6); background-image: -webkit-linear-gradient(-410deg, rgba(37, 104, 163, 0.6) 20%, rgba(18, 51, 80, 0.8)); background-image: linear-gradient(140deg, rgba(37, 104, 163, 0.6) 20%, rgba(18, 51, 80, 0.8)); } .cover-green { background-color: rgba(21, 111, 120, 0.6); background-image: -webkit-linear-gradient(-410deg, rgba(21, 111, 120, 0.6) 20%, rgba(6, 31, 33, 0.8)); background-image: linear-gradient(140deg, rgba(21, 111, 120, 0.6) 20%, rgba(6, 31, 33, 0.8)); } .cover-purple { background-color: rgba(73, 50, 82, 0.6); background-image: -webkit-linear-gradient(-410deg, rgba(73, 50, 82, 0.6) 20%, rgba(17, 11, 19, 0.8)); background-image: linear-gradient(140deg, rgba(73, 50, 82, 0.6) 20%, rgba(17, 11, 19, 0.8)); } .cover-red { background-color: rgba(119, 31, 18, 0.6); background-image: -webkit-linear-gradient(-410deg, rgba(119, 31, 18, 0.6) 20%, rgba(30, 8, 5, 0.8)); background-image: linear-gradient(140deg, rgba(119, 31, 18, 0.6) 20%, rgba(30, 8, 5, 0.8)); } .cover-orange { background-color: rgba(174, 80, 4, 0.6); background-image: -webkit-linear-gradient(-410deg, rgba(174, 80, 4, 0.6) 20%, rgba(74, 34, 2, 0.8)); background-image: linear-gradient(140deg, rgba(174, 80, 4, 0.6) 20%, rgba(74, 34, 2, 0.8)); } .cover-slate { background-color: rgba(0, 0, 0, 0.4); background-image: -webkit-linear-gradient(-410deg, rgba(0, 0, 0, 0.2) 20%, rgba(0, 0, 0, 0.6)); background-image: linear-gradient(140deg, rgba(0, 0, 0, 0.62) 20%, rgba(0, 0, 0, 0.6)); } .cover-disabled { background: none; } .btn, .navigation__item a { padding: 10px 20px; border: 1px solid #DF9C81; border-radius: 20px; color: #DF9C81; text-shadow: none; letter-spacing: 1px; font-weight: bold; font-size: .9em; -webkit-font-smoothing: antialiased; } .btn:hover, .navigation__item a:hover { border-color: #d06c44; color: #d06c44; } .btn-border-small { margin-left: 10px; padding: 6px 8px; border: 1px solid #DF9C81; border-radius: 20px; font-size: .8em; } .btn-contribute { padding: 6px 8px; border: 1px solid #DF9C81; border-radius: 8px; background-color: #DF9C81; color: white; font-weight: bold; font-size: 1.1em; } .btn-secondary { border-color: #5BA4E5; color: #5BA4E5; } .btn-secondary:hover { border-color: #217fd2; color: #217fd2; } .btn-tertiary { border-color: #999999; color: #999999; } .btn-tertiary:hover { border-color: #737373; color: #737373; } .btn-large { padding: 10px 24px; font-size: 1.1em; } .btn-small { padding: 8px 12px; font-size: .7em; } .btn-mobile-menu { position: fixed; top: 0; right: 0; left: 0; z-index: 9999; display: none; width: 100%; height: 35px; border-bottom: 1px solid rgba(255, 255, 255, 0.1); background: rgba(51, 51, 51, 0.98); text-align: center; } .btn-mobile-menu__icon, .btn-mobile-close__icon { position: relative; top: 10px; color: #FFF; } nav { position: relative; display: inline-block; } .navigation { position: relative; float: left; display: inline-block; margin: 0; list-style-type: none; } .navigation__item { display: inline-block; margin: 5px 1px 0 0; line-height: 1em; } .navigation__item a { position: relative; display: block; border-color: #FFF; color: #FFF; opacity: .8; } .navigation__item a:hover { border-color: rgba(255, 255, 255, 0.3); background: rgba(255, 255, 255, 0.3); color: #FFF; opacity: 1; transition: all .3s; } .navigation--social a { padding: 6px 8px 6px 9px; border: 0px; } .navigation--social a .label { display: none; } .navigation--social a .icon { display: block; font-size: 1.7em; } i { font-weight: normal; font-style: normal; font-size: 18px; font-family: 'entypo'; } .social { font-size: 22px; } .icon-social { position: relative; display: block; font-size: 22px; font-family: 'entypo-social'; } *:focus { outline: none; } .wechat[data-v] { position: relative; } .qrCode[data-v] { position: absolute; bottom: 42px; left: -25px; display: none; width: 92px; height: 92px; background-color: #fff; text-align: center; } .wechat .qrCode .triangle-down[data-v] { position: absolute; bottom: -8px; left: 50%; margin-left: -6px; width: 0; height: 0; border-top: 10px solid #fff; border-right: 6px solid transparent; border-left: 6px solid transparent; } .wechat:hover .qrCode[data-v] { display: inline; } @media all and (max-width: 1100px) { .panel-title { font-size: 2em; } .panel-subtitle { font-size: 1em; } .panel-cover__description { margin: 0 10px; font-size: .9em; } .navigation--social { margin-top: 5px; margin-left: 0; } } @media all and (max-width: 960px) { .btn-mobile-menu { display: block; } .qrCode[data-v] { Margin: 0px 41%; } .panel-main { position: relative; display: table; } .panel-cover--collapsed { width: 100%; max-width: none; } .panel-main__inner { display: table-cell; padding: 60px 10%; } .panel-cover__description { display: block; margin: 0 auto; max-width: 600px; } .panel-cover { width: 100%; height: 100%; background-position: center center; } .panel-cover.panel-cover--collapsed { position: relative; display: block; padding: 0; height: auto; background-position: center center; } .panel-cover.panel-cover--collapsed .panel-main__inner { display: block; padding: 70px 0 30px 0; } .panel-cover.panel-cover--collapsed .panel-cover__logo { width: 60px; border-width: 2px; } .panel-cover.panel-cover--collapsed .panel-cover__description { display: none; } .panel-cover.panel-cover--collapsed .panel-cover__divider { display: none; margin: 1em auto; } .navigation-wrapper { position: fixed; top: 0; right: 0; left: 0; display: none; padding: 20px 0; width: 100%; border-bottom: 1px solid rgba(255, 255, 255, 0.15); background: rgba(51, 51, 51, 0.98); } .navigation-wrapper.visible { display: block; } .cover-navigation { position: relative; float: left; clear: left; display: block; width: 100%; } .cover-navigation .navigation { display: block; width: 100%; } .cover-navigation .navigation li { margin-bottom: .4em; width: 80%; } .cover-navigation.navigation--social { padding-top: 5px; } .cover-navigation.navigation--social .navigation li { display: inline-block; width: 25.8%; } .content-wrapper { margin: 0 auto; width: 80%; max-width: none; } .content-wrapper__inner { margin-right: 0; margin-left: 0; } .navigation__item { margin: 0 0 .4em 0; width: 100%; } } @media all and (max-width: 767px) { .panel-cover__logo { width: 100px; } .Weibo_icon_position { top: -6px; right: 35px; } .qrCode[data-v] { Margin: 0px 38%; } } @media all and (max-width: 480px) { .qrCode[data-v] { Margin: 0px 30%; } } @media all and (max-width: 340px) { .panel-main__inner { padding: 0 5%; } .panel-title { margin-bottom: .1em; font-size: 1.5em; } .panel-subtitle { font-size: .9em; } .btn, .navigation__item a { margin-bottom: .4em; } } 404 对不起，您要找的页面丢失了，(＞_＜；) Sorry, The page your requested can not be found, (＞_＜；) 可以向打小报告哦~ 404 © 2019 |"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-02-18T00:38:20.688Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"主题Admin更改记录","slug":"Admin","date":"2050-12-12T14:16:01.000Z","updated":"2020-03-19T09:24:11.516Z","comments":true,"path":"2050/12/12/Admin/","link":"","permalink":"/2050/12/12/Admin/","excerpt":"","text":"记录一下Admin的进度2020.01.05主题选择看上个Vue写的Admin，虽然当初讲Vue的时候基本没听，但也还好其实。 用的是Vue Black Dashboard - v1.1.0 MarkDown其实一开始是想自己写的，写了半天吧，发现有点烦，于是就打算用现成的了。 由于是Vue，本来想用editor.md的，无奈不懂为什么有个CSS样式一直报错，说找不到。 后来只能决定用mavon-editor，因为网上我看好多人都是用这个的。就从众了，因为默认主题颜色是白的，首先就是改颜色。 然后，呵呵，改了一天，不知道为什么第三方组件有的样式改了是不生效的。尤其是mavon-editor的textarea文字颜色，怎么改也该不出来，好家伙最后发现是mavon-editor.js里居然把Auto-text里的样式用js全重写了一遍！！！ 难过…… 2020.01.06MarkDown样式基本调好后，解决了一下图片上传的问题。目前的想法是，上传图片后先将图片送到服务器上暂时保存，删除图片时也会从服务器上删除，最后在发布文章的时候再一次性从服务器上上传到腾讯的COS。现在可以暂存图片，COS上传还在解决子账户的问题。 上传图片时发现系统权限不够无法创建文件夹。不知道为什么windows默认使用的是user用户，明明还有很多可选偏偏选这个。使用axios时出现not define的错误，这个网上一堆，类比下就出来了。有时间真的要看看文件操作这部分。 Vue路由选的主题发现没有登陆选项，因为后台是和小伙伴一起用的，所以需要区别下，背景啦，上传URL啦什么的。然后学习了下路由，由于源码就是用了一个嵌套路由，默认path是&#39;/&#39;然后redirect到一个/dashboard下面。如果把原path改成别的会导致部分组件不显示。 明发现内部组件更换和TopNavBar下compute()方法有关 routeName() { const { name } = this.$route; return this.capitalizeFirstLetter(name); } 这个值会改变vue2-transitions的key值。来控制显示组件。具体没有细看。就直接再app和layout的mounted()里加了个判断，不符合直接跳到Login页面，简单粗暴。有时间一定要看看这个具体是怎么回事。 2020.01.07Login做了个登陆界面，感觉自己相当菜鸡，","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/tags/技术/"},{"name":"你说这知识咋就不进脑子呢","slug":"你说这知识咋就不进脑子呢","permalink":"/tags/你说这知识咋就不进脑子呢/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"主题更改记录","slug":"ThemeChange.log","date":"2050-12-12T14:16:01.000Z","updated":"2020-03-19T09:28:14.925Z","comments":true,"path":"2050/12/12/ThemeChange.log/","link":"","permalink":"/2050/12/12/ThemeChange.log/","excerpt":"","text":"记录一下改主题的东西吧目录什么的不用想了，不存在的。 CDN总有一天会换的。总有一天。 滚动条和顶部进度条这个主要修改CSS和JS的scrollbar类还有-webkit-scroll的相关样式和函数。 本身不难，就是东西都忘了，改了半天，然后发现在即蠢的一批。background: linear-gradient()的用法其实也是“偷”来的。个人感觉还可以，挺好看的。2019.12.19 backgroundcontent部分：这部分其实吧，就是加了个background-img: url()。其实一开始想做成能切换背景的样子，但是还是自己太蠢，样式调了半天也没弄出来，暂时放弃了。 top部分：就是换个url，在_config.yml里改。 index的centerpassage在figure下面加了俩div用来装passage图片，改了下sakura-app.js里的nextpassage()和prepassage()以及其初始化函数。周期性调用nextpassage()来换图。 使用Animate.css通过class进行淡入淡出（感觉好蠢的操作啊）。 由于是在顶部，position调整为absolute就好了。和contant的passage不一样，那个调成absolute就飞到顶端了。2019.12.20 aplayer部分主要就是改ID和servers，网易云私有的list似乎不能被访问。 一开始少了俩图标，重新建立个新的只改ID发现就好了，可能是之前瞎改layout的时候碰到点什么。2019.12.21 Back-to-top(cd-top)把原本的&lt;a&gt;去掉了，CSS还留着，然后“偷”了个球 是A-Obsidian的，本来想改颜色，发现咋改都有点丑。就同意了下蓝色。2333333333 最后加了个Topへ，就是像给个提示，原主题好像没有，好像。2019.12.25 nav删除了一些，这部分直接从_config.yml直接改，注意后面路径也要改，language下的zh-cn.yml也需要改，只有对应Category和tags存在才会生成文件夹。 目前不知道改怎么弄，还在调教，2333333 单页改动Archive的部分就是换了个图，改了个名字，_config.yml和language下zh-ch.yml都得改。 tags下面的似乎和WordPress的不一样，主要是Booklist，变成文章形式了。 tags要打booklist的名字，categorty不要写，不然会出现在Archive下面。2019.12.26 扒Re:stage(Re:ステージ！)官网部分一直觉得Re:stage的官网效果做的不错（其实也挺简单的动画，但由于是日本人做的，我觉得就很不错了。果然做游戏的审美都不差。哈哈哈），其实之前也偷偷扒拉过。这次完整的算是扒了一个小部分出来。就是角色介绍的那部分。艰难，他用了一个叫TweenMax的库来做动画，定义了一堆函数来回调用，找的我累死了，而且有的语法不再原页面就GG了，但是也没什么影响，可能是找不到元素吧。使用jQuery重写了一些必要的东西，本人很懒，还使用了TweenMax库，这中间真的被自己蠢爆了，名字大小写错了导致jQuery选择器选不到元素卡了半天。CSS很好搞，没什么，到时候微调一下样式就算结束。 数据部分，暂时没办法从Ejs的模板得到数据，不知道为啥，就是空。也不想一次性把所有人的信息放上来，由于整个bloc都没有用数据库，就这里用一个库感觉还不如整体重构一下。暂时卡住了呢。 目前是选择查库了，现在基本的取数据，查标签，删除标签都差不多了呢。动画也能很好的跟上。要不要在弄点其他的呢？ js失效一开始是把js都和去哪来的一样放在了footer.ejs里，但是这样一开是首页的时候就加载了，针对其他页面的js事件绑定是失败的。在到其他页面时候时间是不会触发的。似乎是因为用了Pjax进行的是局部刷新，js是不会重新被加载的。即使把js放到局部模块里。第一次是没问题，第二次访问还是失效，似乎是因为局部刷新不会加载第二次外部引用的js。于是想了个很蠢的方法就是在需要的模块前加上个&lt;script&gt;$.getScript();&lt;/script&gt;来重新加载需要的js。2020.01.01 一些细微调整主要是配置文件上的调整，然后看了看有些啥要留下，啥不留下。 之前一直忙着搞后台，自己本来的东西都忘了。现在争取每天有点进度 2020.1.19 live2D鼓捣了半天官方的SDK，一直有个属性赋值不成功。然后试了下hexo-helper-live2d，但是发现怎么也换不了模型，可能我有哪里没弄对吧。 然后又返回来鼓捣官方SDK，一步一步调试发现motion的JSON加载有问题，解包碧蓝航线的Live2D，用的perfare大佬的UnityLive2DExtractor提取的。 发现官方SDK读取motion的JSON时&quot;TotalPointCount&quot;会越界，也就是没等&quot;segments&quot;读完，顶点就用尽了，改一下顶点大小就能用官方的SDK显示了，顶点给多好像也没关系，但是现在我雪風的idle动作丢了很多，比如头发不飘了，耳朵也不动了，这些很明显。但是吸血鬼的似乎没看出来啥丢失的动作，头发也有飘，翅膀、裙子也有动。 被这个小东西卡了一天我TM也真的是蠢。 说真的，总有一日天，我会用自己的看板娘。 2020.01.21 好的，问题原因很简单，model3.json名字写错了，Idle写成了Idel，自己蠢爆了。 但是发现loop的的动画和CubismViewerForUnity的loop效果不一致，web的loop再结束一个动作后有一种快速倒放的感觉。 2020.01.25 鼓捣了一天，其实有的地方因为嫌烦没有好好看耽误了，目前loop倒放感觉依然不明，但是可以做到TapBody触发动作了model3.json中添加&quot;HitAeras&quot;字段，ID字段要和this._model._model.drawables.ids中相同意思字段吻合。具体内容需要进浏览器console里调试查看。这个可能我觉得可能和moc文件有关（我瞎说的，我什么也不知道，Editor我也只是打开过瞎鼓捣了半天）。 关于身体部位，目前只实现了Head和body，Body部分直接JSON里写就好，Head不止需要在JSON定义。lappdefine.ts中需要加入export const MotionGroupTapHead: string = &quot;TapHead&quot;;来定义一个动作控制。其次再lapplive2dmanager.ts的onTap方法里第一个判断头部哪里，原方法若点击头部是变化表情this._models.at(i).setRandomExpression();,有必要的话，换成和下面一样的this._models.at(i).startRandomMotion();，记得传参，第一个是刚刚定义的LAppDefine.MotionGroupTapHead,指定哪一个动作用的，第二个不变LAppDefine.PriorityNormal就好。 2020.01.27 放弃了，找不到调整模型的方法，看着一堆眼花缭乱的代码，还有恶心的日语注释（主要是片假名看着……）。打算还是用别人现成的东西吧。 2020.01.31 整理了下心情，好好翻了下manual，找到了放大模型显示的地方。 1、lapplive2dmanager下渲染前有个onUpdate()函数，在里面把矩阵大小放大就好。2、lappmodel下setupModel()中修改 Layout下_modelMatrix的scrale，这里如果参数是1，1的话是按照模型原本大小显示，一般会很大。做挂件的画一般在1一下。 模型的移动也可以在上回面两个地方完成，对矩阵调用translate()函数，参数仍是浮点，似乎是按照模型大小为1来计算位移。 回放问题出在动作没有loop。Sample是将你所有的动作放在了一个motion下的，然后每个动作结束后再选取动作压入队列。对于整个motion的loop没有开启的话不知道为什么就会有一个回放一样的。但是还只针对非人物的部分。你在motion里的loop设置是无效的。 妈的文档里其实说明了这个loop的问题。淦!!蠢爆了!!! 2020.02.01 整理下目前Live2D相关东西。 整个内容是用官方的Demo改的。目前整个主函数流程为： window.onload = (): void =&gt; { // create the application instance if (LAppDelegate.getInstance().initialize() == false) { return; } LAppDelegate.getInstance().run(); }; main.ts为主程序入口。首先初始化Canvas和WepassageL的东西。包括Dom操作，事件函数绑定。接下来就是Live的View（用于显示的组件）和整个Cubism SDK的初始化。 View初始化就是视口大小和矩阵。 SDK包括Debug用日志、CubismFramework的初始化、Live2DManager的创建、时钟的更新和背景等其他素材的加载。比如原始Demo上面的那个话模型用的齿轮就是这个时候被加载的。 Live2DManager的构造函数包括的模型矩阵的设置，模型的创建的场景索引的更新。 更新场景时会通过LAppDefine中定义好的内容读取路径信息。调用LAppmodel的LoadAssets方法读model3.json的信息，这里用的时fetch()方法，所以是异步的。会继续先执行其他函数。文件加载完后会调用setupMpdel()函数，继续读取moc文件、和Expression、Physics、Motion等相关文件，均为异步执行。 接下来就是run()函数了。 public run(): void { // メインループ const loop = (): void =&gt; { // インスタンスの有無の確認 if (s_instance == null) { return; } // 時間更新 LAppPal.updateTime(); // 画面の初期化 gl.clearColor(0.0, 0.0, 0.0, 0.0); // 深度テストを有効化 gl.enable(gl.DEPTH_TEST); // 近くにある物体は、遠くにある物体を覆い隠す gl.depthFunc(gl.LEQUAL); // カラーバッファや深度バッファをクリアする gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); gl.clearDepth(1.0); // 透過設定 gl.enable(gl.BLEND); gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA); // 描画更新 this._view.render(); // ループのために再帰呼び出し requestAnimationFrame(loop); }; loop(); } 整体来讲定义了一个loop()函数作为主循环递归调用。 首先确定instance（实例）是否存在。然后是更新时间，画面的清空，启动深度测试，深度函数设置，清空颜色和深度Buffer，混合设置和混合函数设置，然后最最重要的画面渲染render()，最后是个递归的调用写法。（我猜） 主要说渲染，渲染包括背景和齿轮的绘制，然后用了个flush()，我猜是同步用的。然后获取Live2DManager实例然后调用Live2DManager的onUpdate()函数。 onUpdate()中依然首先整理好视口和Canvas大小以及矩阵的设置。接下来调用Model的Update()方法。这里面重要的就是模型动作的startRandomMotion().在这个方法里默认调用的是传入的是Idle的参数，所以会重复执行Idle的动作。但是此重复非循环播放。官方文档里说了。不能保证和编译器的循环一致，所以将循环设为false。这里只是因为之前loop的循环而导致一直执行这个函数，从而看起来好像有点别扭的循环Idle动作。 到这里就是一般的，很简单的说了下流程。要做挂件的话就是再矩阵、视口大小和Canvas的大小上改一改就好。 下面是点击事件，默认是supportTouch是false的，所以绑定的是click的函数。 clickBegan()没什么，重点是clickEnd()函数。这里获取了点击坐标后会调用view的onTouchesEnded()函数。在这里做了坐标变换。然后调用Live2DManager的onTap()函数。在这里对点击操作进行了hitTest()，判断击中的是那个区域。默认是对Head和Body的检测，检测是需要模型配合，似乎需要再编辑器里确定。然后根据Hit部位，调用startRandomMotion()函数确定动作或调用setRandomExpression()默认是Head调用后者，Body调用前者。 然后是自己的东西，添加了显示对话功能。通过打乱Demo的代码结构来达成自己不可告人的目的。加入了自己的事件和对话类。对话是储存在json文件里的，可以自己添加和更改。保持读文件操作一致性学习使用了fetch()来异步加载对话。事件就是简单的点击事件，因为Demo用的原生JS。所以依然保持使用基础Dom操作绑定事件。（写的时候有种回到了大一的感觉） 但是现在点击有时候不会触发动作，这个在原Demo上也有这个问题（也可能是我已经找不到原Demo误会了）。 已知问题sakura-app.js里的imgError函数突然开始报错说找不到。现在一脸懵逼中 由于CDN的问题，图片显示不完全和找不到 顶部导航栏Archive和list部分的下拉菜单突然效果变了 其实是和Animate.css的Keyframe重名了，改一下就好。 其实应该重构一下代码的，无奈我很懒，哈哈哈哈哈","categories":[{"name":"吐槽","slug":"吐槽","permalink":"/categories/吐槽/"}],"tags":[{"name":"你说这知识咋就不进脑子呢","slug":"你说这知识咋就不进脑子呢","permalink":"/tags/你说这知识咋就不进脑子呢/"},{"name":"吐槽","slug":"吐槽","permalink":"/tags/吐槽/"}],"keywords":[{"name":"吐槽","slug":"吐槽","permalink":"/categories/吐槽/"}]},{"title":"NLP_EmotionClassfied","slug":"NLP_EmotionClassfied","date":"2020-02-12T14:16:01.000Z","updated":"2020-02-18T16:49:32.266Z","comments":true,"path":"2020/02/12/NLP_EmotionClassfied/","link":"","permalink":"/2020/02/12/NLP_EmotionClassfied/","excerpt":"","text":"不谈理论，不谈公式，就说用啥能实现！1. 整体过程 读取训练数据，调整数据格式。 对数据进行分词（字），可以按词，也可以按字。 统计词（字）频，建立词典（字典）。 对每个词（字）建立索引。 将之前分好词（字）的每个句子用索引替换。 调整句子长度，多的截取，少的补0。 建立模型 训练。 2. 详细说明2.0 导包其实这是句废话，不导包怎写代码？ import numpy as np; import tensorflow as tf; import jieba; # 用于分词 import re; # 用于删除特殊字符 import pandas as pd; # 用于统计词频，其实也可以用Tensorflow自己的Tokenizer 2.1 读取训练数据由于任何人的训练数据不一样，格式千奇百怪，整理方式也不尽相同，先说一下最终的样子吧。 简单来讲需要分成两个list，一个label用来存放标情感标记。一个sentencesList用于存放句子。 这里用自己的txt来举例子。 首先数据格式如下 1,&quot;距离川沙公路较近,但是公交指示不对,如果是&quot;&quot;蔡陆线&quot;&quot;的话,会非常麻烦.建议用别的路线.房间较为简单.&quot; ··· ··· 0,说实在的我很失望，之前看了其他人的点评后觉得还可以才去的，结果让我们大跌眼镜。我想这家酒店以后无论如何我都不会再去了。 第一个为label,1表示积极，0表示消极，之后为语句。我们只需要按行读取，先存标记，然后出去标点等特殊符号，接着将语句存入list就好。 在这个部分其实就可以使用jieba进行分词操作。这里就加上了。 lineList = []; lable = []; with open(&quot;ChnSentiCorp_htl_all.txt&quot;,encoding=&quot;utf-8&quot;) as file: for line in file: if(line[0]==&quot;1&quot;): lable.append(1); else: lable.append(0); line = re.sub(&#39;[’!&quot;#$%&amp;\\&#39;()*+,-./:;&lt;=&gt;?@[\\\\]^_`{|}，。（）/《》！~#￥%……&amp;*？：；”“‘’【】、\\n|]+&#39;,&#39;&#39;,line); lineList.append(list(jieba.cut(line[1:]))); 插一句题外话，这里肯定有人要问Python还打分号？不好意思，个人习惯，C++和JAVA写多了，习惯性打的，甚至还习惯性补分号，反正Python也不算错，还请见谅。 好的我们来看，首先with open()常规操作打开文件。对每一行进行读取，并判断第一行的label，接下来使用re进行特殊符号的删除。然后使用jieba对从第二个字符开始之后的字符串进行分词操作，因为第一个是label不需要他。 2.2 分词操作上面确实做了，如果没错可以在这里做。当然暂时我为了求快没有按字分。可能以后会写吧。 2.3 统计词（字）频，建立字典建立字典是为了其实是为了下一步的索引，索引是为了方便计算，数字的计算和查找要比字符串方便而且快得多。所以最后训练数据是很多条索引组成的句子。 这里使用的pandas来统计。 word_dictionary =[]; for line in lineList: for word in line: word_dictionary.append(word); print(word_dictionary); wordNum = pd.Series(word_dictionary).value_counts(); wordNum = wordNum[wordNum&gt;=5]; 首先是个笨办法，遍历每一个单词，然后添加进一个list（因为list不去重）。接着就是建立一个pandas.Series对象调用value_counts()方法统计词频。返回值是一个Series对象。里面储存了词和次出现的次数。 2.4 对每个词（字）建立索引。这里做的很简单，就是把频率换成索引就好。但是要注意，索引要从1开始，0用于填充补齐。还有就是，我们选择出现频率比较高的词，因为计算速度。但实际上低频词也未必不起到关键作用，滑稽保命之类的对吧？ wordNum = wordNum[wordNum&gt;=5]; # 保留词频大于等于5的词 wordNum[:] = list(range(1,len(wordNum)+1)); # 依照频率高低将频率换成索引， wordNum[&#39;&#39;] = 0; # 添加空的索引为0 首先是提取词频大于5的词，然后将频率换成索引，然后添加0索引。 2.5 用索引替换句子sentencesi = []; for line in lineList: sentenceindex = []; for word in line: if word in wordSet: sentenceindex.append(wordNum[word]); sentencesi.append(sentenceindex); 就是个替换，我觉得没啥可说的，就是遍历一遍所有单词，如果词再字典里那么久转换成索引添加进来，没有就放弃。 2.6 调整句子长度，多的截取，少的补0。为了计算速度，这里同时使用固定长度的句子，因此就要多截少补。 X =list(tf.keras.preprocessing.sequence.pad_sequences(sentencesi,maxlen=50)); 这里选取最大长度为50。当然好一点的方法是先统计一下句子长度，找一个能包含大多数完整句子的长度。 2.7 建立模型和训练。模型这里很简单的随便建立了一个，层数，损失函数和优化函数都可以看情况换，我是看有篇文章这么做了，我就这么写了。 x_train = np.array(X); y_train = np.array(lable); model = tf.keras.Sequential(); model.add(tf.keras.layers.Embedding(input_dim=len(wordSet),output_dim=200,input_length=50)); model.add(tf.keras.layers.LSTM(128)); model.add(tf.keras.layers.Dropout(0.5)); model.add(tf.keras.layers.Dense(1,activation=&quot;sigmoid&quot;)); model.compile(loss=&#39;binary_crossentropy&#39;, optimizer=&#39;rmsprop&#39;, metrics=[&#39;accuracy&#39;]); print(model.summary()); model.fit(x_train, y_train, batch_size=16, epochs=250); 这里因为是2分类所以就用sigmoid了，多分类要用softmax，将来会做一个多分类的。 补充3.1 程序说明整个程序习惯性的面向过程了。所以上面代码全部按顺序crtl+c、crtl+v下来差不多就能用了。为了流程叙述方便所以这么写了。而且为了快，很多地方没有优化，速度肯定还可以再快，再者为了维护，实际上最终要用的话最好面向对象一下。 其中需很多多西想重复用的话其实可以保存一下。像是模型，字典什么的。而且要生产开发用还需要预测，个人认为同样还需要字典等数据，所以保存下来会好一些？ 3.2 tf.keras.layers.Embedding()的一些小说明这个是个嵌入层，用于将索引转换为向量。参数如下 input_dim: int &gt; 0。词汇表大小， 即，最大整数 index + 1。 output_dim: int &gt;= 0。词向量的维度。 embeddings_initializer: embeddings 矩阵的初始化方法 (详见 initializers)。 embeddings_regularizer: embeddings matrix 的正则化方法 (详见 regularizer)。 embeddings_constraint: embeddings matrix 的约束函数 (详见 constraints)。 mask_zero: 是否把 0 看作为一个应该被遮蔽的特殊的 “padding” 值。 这对于可变长的 循环神经网络层 十分有用。 如果设定为 True，那么接下来的所有层都必须支持 masking，否则就会抛出异常。 如果 mask_zero 为 True，作为结果，索引 0 就不能被用于词汇表中 （input_dim 应该与 vocabulary + 1 大小相同）。 input_length: 输入序列的长度，当它是固定的时。 如果你需要连接 Flatten 和 Dense 层，则这个参数是必须的 （没有它，dense 层的输出尺寸就无法计算）。其实还可以指定一个weights=，这个是指定自己训练的词向量用的。默认他会通过initializer随机初始化一个，当然这个initializer你也可以指定。 3.3 词向量通常我们想让字典尽可能贴近我们的需求，所以需要自己训练词向量，这个时候就需要Word2Vec了。 3.2.1 词向量训练前准备首先是导包！ import gensim.models.word2vec; 然后自然是准备词（了），我们可以直接利用上面分完词还未转化为索引的句子，当然有的这里会使用字，有的也会追加停用词。不论怎样，我们最后得到一个字符串组成的列表就可以了。 3.2.2 词向量训练vecModel = gensim.models.Word2Vec(); 这里参数很多，说几个这里一般简单用的： sentences : 可迭代的对象 size : 词向量的维数。 window : 句子中当前词和预测词之间的最大距离。window越大，则与中心词较远的词也会产生上下文关系。 min_count :最小词频，忽略所有总频率低于此频率的单词 差不多就这些，剩下可以看API。（英文注意！中文百度） 对于语料库很大的情况，训练词向量需要通过从磁盘加载sentences。循环训练。 3.2.3 加载现有词向量可以通过加载现有词向量来使用。这个方法各不相同，至少Word2vec训练出来可的一通过gensim.models.KeyedVectors.load()来加载，具体参数见API。（英文注意！中文百度） 加载完后需要依据你的字典把对应的词的向量添加进来。","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"你说这知识咋就不进脑子呢","slug":"你说这知识咋就不进脑子呢","permalink":"/tags/你说这知识咋就不进脑子呢/"},{"name":"AI","slug":"AI","permalink":"/tags/AI/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"DirectX12 Study log (仮)","slug":"DirectX12.log","date":"2019-12-30T14:16:03.000Z","updated":"2020-03-19T09:21:57.771Z","comments":true,"path":"2019/12/30/DirectX12.log/","link":"","permalink":"/2019/12/30/DirectX12.log/","excerpt":"","text":"DirectX12 Study log (仮)主要内容基于《3D GAMEPROGRAMMING WITH DIRECTX 12》内容学习。原文使用面向对象编程，个人强行改为面向过程。而且还是非常SB的面向过程。垃圾一枚，只能这样了。主要记录D3D12有些什么东西，干了些什么。学习的时候没有记录会有些很多缺漏。 关于具体的实现的东西想在新开个地方慢慢解释。关于HLSL和Shader也会新开一个文章慢慢说。 数学基础说白了，看了也记不住，记住了也不懂，懂了也不会用。2333333 Direct3dD initialize Direct3D的初始化DirectX10（9？）之后的变化其实个人只知道DirectX7，就是那本“超经典”的《Windows游戏大师编程技巧》。这本书用的很老。里面最主要的Surface的概念似乎从DirectX11开始就没了（或是极少被提到）。10似乎是最后使用这个概念的。（可能也是9，我什么也不知道，23333），之前大多数的操作是针对Surface的，DrawLine、Bitmap等操作都是基于Surface的。之前似乎没有涉及到Shader。还有Factory，7似乎所有东西基本都从这里创建。 初始化内容顺序就按照书上的了,其实不是特别有必要.比如就可以先创建交换链在创建命令队列. Devices 设备这个不论那个版本都是需要先初始化的东西，目的在于选择当前机器上显示适配器（显卡？）。获取所支持的DirectX的版本并设置需要使用的版本。而且接下来所有与Direct3D直接相关的东西由Devices创建. Fance 围栏Fance主要作用是标记命令执行的位置,用于同步CPU和GPU.防止CPU速度太快而GPU没执行完命令就把命令队列给刷新了. MASS 多重采样其实不开也可以,就是画面不好看而已.想恶心人可以不开.当然书上开的是4x的,也可以开8x,前提你渲染的东西不多,并且显卡得撑得住啊. CommandQueue and CommandList 命令队列和命令列表命令队列用于向GPU提交要执行的命令,相当于Windows的消息队列.命令列表用于记录队列需要执行的命令,然后将列表提交到队列中.至于为什么不直接加入到队列里.实际答案我也不机密.我猜可能是因为我们的目标是呈现一张完整的Frame.GPU又是并行计算,提交成批操作一可以更好利用GPU效率,二不至于因为一些错误导致可以看见画面生成过程. 而创建CommandList还需要先创建CommandAllocator(命令分配器),负责记录命令并自动写到List中.具体原理我也不懂,反正到时候直接获取然后Execute就行了.233333 Swap Chain 交换链用于切换用户能看到的是哪一块缓冲块(之间叫Surface来着?).通常有两块后台缓冲区,一块给用户看,一块用来绘制下一帧.绘制好了就交换一下,让用户看到下一帧并重绘前一帧.两块缓冲话技术又叫双缓冲,三块就是三缓冲,似乎再多就没啥用了.目的是为了让用户就看到以绘制好的画面.而不知道画面是怎么生成的. DescriptorHeap And Descriptor 描述符堆和描述符描述符就是资源视图,由于Rendering Pipeline不能直接绑定资源,所以使用视图来获取资源情况.描述符堆用来保存他们. 描述符最重要的两个,RTV(Render Target View)和DTV(Depth Target Viet). RTV相当于用于渲染的画面,在Draw任何东西先都应先清空并设置,创建时为每个后台缓冲区创建一个RTV. DTV用于深度模板. 之后还有SRV(Shader Resource View),用于保存着色器使用的资源,如纹理,贴图.SRV似乎应该在加载贴图的时候再创建,最基本的初始化阶段不是必须的.CBV(Constant Buffer View)和UAV(Unordered Access View)bulabulabula 在所有描述符堆前应使用GetDescriptorHandleIncrementSize();获取描述符大小,在创建多个描述符时需要用offset();进行偏移. ViewPort 视口视口就是描述你窗口大小的东西,DirectX只能在Windows上运行,通常视口大小与Windows窗口大小一致,同时视口还可以设置深度,但通常最小为0.0f最大为1.0f. Scissor Rectangle 裁剪矩形裁剪矩形是将矩形外的像素全部剔除,通常和视口大小保持一致. 计时器不管咋样最好有一个,高性能计时器对控制帧率有很好的帮助. 书中给出的GameTimer利用了Windows自带的计时器函数QueryPerformanceCounter();返回一个int64的整数,配合QueryPerformanceFrequency();返回计时器的频率一个int64的整数. 通过调用两次QueryPerformanceCounter();做差再乘上QueryPerformanceFrequency();即可得到两次调用之间经过的时间. Rendering Pipeline 渲染流水线(渲染管线)Profile 概述graph TD A(Input Assembler Stage 输入装配阶段) --&gt; B(Vertex Shader Stage 顶点着色器阶段) --&gt; C(Hull Shader Stage 外壳着色器阶段)--&gt;D(Tessellator Stage 曲面细分阶段)--&gt;E(Domain shader Stage 域着色器阶段)--&gt;F(Geometry Shader Stage 集合着色器阶段)--&gt;G(Stream Output Stage 流输出阶段)--&gt;H(Rasterizer Stage 光栅化阶段)--&gt;I(Pixel Shader Stage 像素着色器阶段)--&gt;J(Output Merger Stage 合并输出阶段) Input Assembler Stage 输入装配阶段 (IA)简单来讲就是从显存中模型的顶点坐标和面索引.注意这里是显存,这就意味之我们在此之前就应该把数据从内存中拷贝到显存里来. 然后需要设置图元拓扑,就是指定顶点之间的结构,读文件的一般不需要注意索引的绕序,想obj和m3d都是可以直接用的. Vertex Shader 顶点着色器阶段(VS)涉及一大堆一大堆数学东西.简而言之就是把相对坐标变成绝对坐标,把局部空间坐标系上的点,表示成世界空间坐标系的点.然后归一化深度值. Hull Shader 外壳着色器阶段(HS) 不是H Sence！其实是曲面细分阶段的一部分,但实际上工作量差不多,我就拿HS说了 Hull Shader包括两种SHader: 1.Constant Hull Shader 常量外壳着色器 2.Control Hull Shader 控制外壳着色器 Constant Hull Shader 常量外壳着色器常量外壳着色器的任务是输出网格的曲面细分因子(tessellation factor).曲面细分因子指示了曲面细分阶段中将面片镶嵌处理后份数. 说白了就是增加定点数量.简单操作就是将直线等分 等分分为两部分，对于四边面，一个是对每条边的细分，另一个是对内部空间几行几列的细分，对于三边面，一个是对每条边的细分，另一个是对内部空间的细分，三边面只有一个内部空间细分参数，可以理解成n行n列的细分。（嗯，应该吧。） Control Hull Shader 控制外壳着色器控制外壳着色器以大量控制顶点作为输入与输出,每输出一个控制点就调用一次.应用之一是改变曲面的表示方式.比如三次贝塞尔曲线.可以带来更丰富的细节. 说白了HS就是可以把低模变成高模 镶嵌器阶段这个是硬件自动完成的，这个环节会根据常量外壳着色器输出的曲面细分因子对面片进行镶嵌画处理，当然四边面和三边面的处理方式是不同的。 Domain Shader域着色器镶嵌器阶段会输出新建的所有顶点与三角形，在此阶段创建的顶点会逐一调用域着色器.其本质就是“对已经经过镶嵌化的面片进行处理的顶点着色器”。对镶嵌花化后的点进行做坐标变换。 Geometry Shader 几何着色器(GS)记得某个群的入群问题就是GS在PS前还是VS后？（还是VS前PS后来着）。总之书上说的是：“再不启用曲面细分这一环节，GS这个可选阶段便会位于VS与PS之间”。 GS的输入必须是完整的图元，如构成一条线的两个顶点，构成三角形的三个顶点。书中提到的一个常见应用是将一点拓展成为一个四边形（俩三角形）。并以此介绍了公告牌技术，用来显示远处的一些小东西。 GS其实就是把顶点来回折腾的一个东西，并且还可以改变图元拓扑（其实我想说的是变成不同的图元），一些小的细节变化和粒子效果似乎可以用这个实现。 Pixel Shader像素着色器(PS)PS会对每一个像素采样点进行计算，根据顶点的插值属性作为输入来计算对应为的像素的颜色。PS可以返回单一恒定的颜色，也可是实现逐像素光照，反射，和阴影等其他效果。 Output Marger 合并输出简单来讲就是去掉不符合要求的像素，如没通过深度缓冲区测试或模板缓冲区测试的像素。剩下的就写入后台缓冲区中，“Blend 混合”也是在这个阶段实现的。 Shader 着色器的写法和一些东西会专门找地方说。 Lighting 光照这个，要在这里面说嘛？就是很多很多的数学和物理知识，在Shader里实现就好了。 Texture Mapping 纹理贴图纹理其实就是一种资源，D3D12中几乎所有资源统一用ID3D12Resource来管理。 纹理具有特定的数据格式，不支持除这些格式之外的格式，并且纹理可以具有多个层级的mipmap（给我感觉的意思当相当于人工智能里的池化操作，就是具有多个大小的同一图，但他们都还在同一个“图”里）。 有一种技术叫“渲染到纹理”，是指即将纹理作用于渲染目标，有能将纹理作为着色器的资源（在着色器里对纹理采样）使用。 DirectX中纹理用DDS(DirectDraw Suaface Format)格式的文件。PS需要装插件才能导出和编辑（忙活了我半天）。 Blend 混合做了个和啥呢，就是把已经光栅化的像素（目标像素）和现在要光栅化的像素（源像素）进行融合的操作。常见操作就是半透明物体的运用，配合纹理贴图会有很多意想不到的效果，有种用代码玩AE的感觉。 Stencli 模板在这里我纳闷过模板为啥子不是Template，一般见到模板都是Template。查字典哇Stencli也是模板的意思。但就是Stencli的模板指的是印刷文字或图案的那个模板。Template有模框，样板的意思。 所以顾名思义，这里的模板是指根据某种规则来写入像素的。书中给的应用就是镜子。当然是平面镜。阴影书中也用了模板缓冲来防止双重混合。 第一人称视角摄像机在书中15章之前的内容中，视角都是通过一个DirectX::XMFLOAT3类型的EyePos变量，传到着色器中gEyePos，通过取景变换转换坐标。 第一人称摄像机就是把这个东西封装成类，添加一些方便计算的属性和方法。同时可以不仅仅“旋转”改变坐标，还可以移动摄像机坐标。每次角度和位置不同更新内部向量，供着色器使用。 动态索引说白了就是让着色器用索引访问资源。据说配合实例化有意想不到的效果。动态索引可以让所有纹理资源一次绑定后，让着色器自己选择适合的纹理。索引要求使用系统ID。如SV_InstanceID、SV_VertexID。 实例化","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/tags/技术/"},{"name":"DirectX","slug":"DirectX","permalink":"/tags/DirectX/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2020-02-18T00:38:20.675Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]}]}